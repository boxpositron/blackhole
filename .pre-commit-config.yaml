# Pre-commit hooks for Pi-hole + Tailscale Docker Compose project
# See https://pre-commit.com for more information

# Global settings
default_install_hook_types: [pre-commit]
default_stages: [pre-commit]
fail_fast: false
minimum_pre_commit_version: '3.0.0'

# CI-specific configuration
ci:
  autofix_prs: true
  autoupdate_schedule: weekly
  skip: [docker-compose-check]

repos:
  # ============================================================================
  # Universal file checks (fast, run first)
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      # Whitespace and formatting
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
        name: Trim trailing whitespace
      
      - id: end-of-file-fixer
        name: Ensure files end with newline
      
      - id: mixed-line-ending
        args: [--fix=lf]
        name: Normalize line endings to LF
      
      # File safety checks
      - id: check-added-large-files
        args: ['--maxkb=1000']
        name: Check for large files (>1MB)
      
      - id: check-case-conflict
        name: Check for case conflicts
      
      - id: check-merge-conflict
        name: Check for merge conflict markers
      
      # Security
      - id: detect-private-key
        name: Detect private keys

  # ============================================================================
  # YAML validation and linting
  # ============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-yaml
        name: Check YAML syntax
        args: ['--unsafe']
        exclude: ^\.secrets\.baseline$
  
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: [--strict, -d, '{extends: relaxed, rules: {line-length: {max: 120}}}']
        files: \.(yaml|yml)$

  # ============================================================================
  # Docker Compose validation
  # ============================================================================
  - repo: https://github.com/IamTheFij/docker-pre-commit
    rev: v3.0.1
    hooks:
      - id: docker-compose-check
        name: Validate docker-compose.yml
        files: docker-compose\.yml$

  # ============================================================================
  # Markdown documentation linting
  # ============================================================================
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.41.0
    hooks:
      - id: markdownlint-fix
        name: Lint and fix Markdown files
        args: ['--disable', 'MD013', 'MD033']
        files: \.(md|markdown)$

  # ============================================================================
  # Spelling checks
  # ============================================================================
  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        name: Check for common misspellings
        args: ['--write-changes', '--ignore-words-list', 'pihole']
        exclude: ^\.git/

  # ============================================================================
  # Secret detection
  # ============================================================================
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.4
    hooks:
      - id: gitleaks
        name: Detect hardcoded secrets

  # ============================================================================
  # Environment file checks
  # ============================================================================
  - repo: local
    hooks:
      - id: check-env-sync
        name: Check .env and .env.example are in sync
        entry: bash -c 'grep -E "^[A-Z_]+=" .env.example | cut -d= -f1 | sort > /tmp/env-example-keys; grep -E "^[A-Z_]+=" .env 2>/dev/null | cut -d= -f1 | sort > /tmp/env-keys || touch /tmp/env-keys; diff /tmp/env-example-keys /tmp/env-keys || (echo "ERROR: .env and .env.example keys do not match" && exit 1)'
        language: system
        files: ^\.env(\.example)?$
        pass_filenames: false

# ============================================================================
# Installation Instructions
# ============================================================================
# 1. Install pre-commit:
#    pip install pre-commit
#    
# 2. Install the git hooks:
#    pre-commit install
#    
# 3. (Optional) Run against all files:
#    pre-commit run --all-files
#
# ============================================================================
# Bypass Instructions (when needed)
# ============================================================================
# Skip all hooks:
#   git commit --no-verify
#
# Skip specific hooks:
#   SKIP=gitleaks git commit -m "message"
#
# ============================================================================
